name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: postgres
  APP_DB_NAME: postgres
jobs:
  Build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: go mod download
      - name: Start postgresql Container
        run: docker compose up -d
      - name: Wait for PostgreSQL to become ready
        run: |
          for i in {1..30}; do
            if docker exec postgres pg_isready -U ${APP_DB_USERNAME}; then
              echo "PostgreSQL is ready";
              break;
            fi
            echo "Waiting for PostgreSQL to be ready...";
            sleep 2;
          done
      - name: Build the application
        run: go build -o myapp .
      - name: Run tests
        run: go test -v ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract short SHA
        id: vars
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Build Docker image
        run: |
          docker build -t thow2025/myimage:latest .
          docker tag thow2025/myimage:latest thow2025/myimage:${{ env.GIT_SHA }}

      - name: Push Docker image
        run: |
          docker push thow2025/myimage:latest
          docker push thow2025/myimage:${{ env.GIT_SHA }}


  sonarCloud:
    needs: Build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=thow21
            -Dsonar.projectKey=thow21_CDAS_EX
            -Dsonar.sources=.
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


